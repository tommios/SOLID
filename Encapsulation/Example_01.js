// Инкапсуляция в JavaScript

// Используя Замыкание

// Переменная, определенная в области действия конструктора
// является приватной для этой функции.
const createCounter = () => {
  let count = 0;
  return {
    // Любые другие функции, определенные в той же области, являются привилегированными:
    // Они обе имеют доступ к закрытой переменной `count`
    // определяются в любом месте их цепочки областей видимости
    click: () => (count += 1),
    getCount: () => count.toLocaleString(),
  };
};

const counter = createCounter();

counter.click();
counter.click();
counter.click();

console.log(counter.getCount()); // 3

console.log(counter.count); // undefined

//   Привилегированный метод – это метод, который имеет доступ к закрытым данным
// внутри области действия функции (также известной как лексическая среда).
//   Привилегированные функции и методы имеют доступ на основе ссылок
// к переменным внутри функции, даже после того, как функция завершилась.
//   Эти ссылки являются действующими, поэтому, если состояние изменяется во внутренней функции,
// изменения переносятся в каждую привилегированную функцию.
//
//   Другими словами, когда мы вызываем counter.click(), она изменяет значение,
// которое видит counter.getCount().
